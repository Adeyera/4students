{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aakif\\\\Documents\\\\Job Related\\\\Hackathons\\\\Practicum\\\\react_frontend\\\\components\\\\ChatRoom.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport results from \"./results\";\nimport { render } from \"react-dom\";\n\nvar ChatRoom = function (_React$Component) {\n  _inherits(ChatRoom, _React$Component);\n\n  var _super = _createSuper(ChatRoom);\n\n  function ChatRoom() {\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      results.get('/message.json').then(function (response) {\n        messages: GiftedChat.append(previous.messages, response.data.text);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chat = React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          messages.forEach(function (item) {\n            var message = {\n              text: item.text,\n              user: _this2.user\n            };\n            results.post('/message.json', message);\n          });\n        },\n        user: this.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }\n      });\n      return React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }\n      }, \"style=\", {\n        flex: 1\n      }, \">\");\n    }\n  }, {\n    key: \"user\",\n    get: function get() {\n      var data = {};\n      results.get('/users.json').then(function (response) {\n        data = (_readOnlyError(\"data\"), response.data);\n      });\n      console.log(data);\n      var user = {\n        id: data.id,\n        name: data.first_name + \" \" + data.last_name\n      };\n      return user;\n    }\n  }]);\n\n  return ChatRoom;\n}(React.Component);\n\nexport { ChatRoom as default };","map":{"version":3,"sources":["C:/Users/Aakif/Documents/Job Related/Hackathons/Practicum/react_frontend/components/ChatRoom.js"],"names":["React","GiftedChat","results","render","ChatRoom","state","messages","get","then","response","append","previous","data","text","chat","forEach","item","message","user","post","flex","console","log","id","name","first_name","last_name","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,OAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAGqBC,Q;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;wCAkBY;AAEhBJ,MAAAA,OAAO,CAACK,GAAR,CAAY,eAAZ,EAA6BC,IAA7B,CAAkC,UAACC,QAAD,EAAc;AAC5CH,QAAAA,QAAQ,EAAEL,UAAU,CAACS,MAAX,CAAkBC,QAAQ,CAACL,QAA3B,EAAqCG,QAAQ,CAACG,IAAT,CAAcC,IAAnD;AACb,OAFD;AAGH;;;2CAEsB,CAEtB;;;6BAEQ;AAAA;;AACL,UAAMC,IAAI,GAAG,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWC,QAAjC;AAA2C,QAAA,MAAM,EAAE,gBAAAA,QAAQ,EAAI;AACxEA,UAAAA,QAAQ,CAACS,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACrB,gBAAMC,OAAO,GAAG;AACZJ,cAAAA,IAAI,EAAEG,IAAI,CAACH,IADC;AAEZK,cAAAA,IAAI,EAAE,MAAI,CAACA;AAFC,aAAhB;AAIAhB,YAAAA,OAAO,CAACiB,IAAR,CAAa,eAAb,EAA8BF,OAA9B;AACH,WAND;AAOH,SARY;AAQV,QAAA,IAAI,EAAE,KAAKC,IARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AASA,aAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqB;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAArB,MAAP;AACH;;;wBApCU;AAEP,UAAMR,IAAI,GAAG,EAAb;AACAV,MAAAA,OAAO,CAACK,GAAR,CAAY,aAAZ,EAA2BC,IAA3B,CAAgC,UAACC,QAAD,EAAc;AAC1CG,QAAAA,IAAI,4BAAGH,QAAQ,CAACG,IAAZ,CAAJ;AACH,OAFD;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,UAAIM,IAAI,GAAG;AACPK,QAAAA,EAAE,EAACX,IAAI,CAACW,EADD;AAEPC,QAAAA,IAAI,EAACZ,IAAI,CAACa,UAAL,GAAkB,GAAlB,GAAwBb,IAAI,CAACc;AAF3B,OAAX;AAIA,aAAOR,IAAP;AACH;;;;EAjBiClB,KAAK,CAAC2B,S;;SAAvBvB,Q","sourcesContent":["import React from \"react\";\r\nimport {Platform, KeyboardAvoidingView, SafeAreaView} from \"react-native\";\r\nimport {GiftedChat} from \"react-native-gifted-chat\";\r\nimport results from \"./results\";\r\nimport { render } from \"react-dom\";\r\n\r\n\r\nexport default class ChatRoom extends React.Component {\r\n    state = {\r\n        messages: []\r\n    };\r\n\r\n    get user() {\r\n        //authenticate user from Firebase\r\n        const data = {}\r\n        results.get('/users.json').then((response) => {\r\n            data = response.data;\r\n        });\r\n        console.log(data);\r\n        let user = {\r\n            id:data.id, \r\n            name:data.first_name + \" \" + data.last_name\r\n        };\r\n        return user;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //get messages from Firebase\r\n        results.get('/message.json').then((response) => {\r\n            messages: GiftedChat.append(previous.messages, response.data.text)\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //leave page?\r\n    }\r\n\r\n    render() {\r\n        const chat = <GiftedChat messages={this.state.messages} onSend={messages => {\r\n            messages.forEach(item => {\r\n                const message = {\r\n                    text: item.text,\r\n                    user: this.user\r\n                }\r\n                results.post('/message.json', message);\r\n            })\r\n        }} user={this.user} />;\r\n        return <SafeAreaView>style={{ flex: 1 }}></SafeAreaView>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}