{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/saraliu/Downloads/4students/dev/4students/react_frontend/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      username: '',\n      password: '',\n      date: ''\n    };\n\n    _this.submit = function () {\n      var _this$state = _this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          username = _this$state.username,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      if (username == '' || firstName == '' || lastName == '') {\n        alert(\"All fields are required\");\n      } else {\n        alert(\"You are registered\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Join\",\n        component: SignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFDF5',\n    width: width,\n    height: height\n  },\n  header: {\n    height: height * 1 / 10,\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingRight: 150,\n    start: 0\n  },\n  title1: {\n    paddingTop: 100,\n    fontSize: 70,\n    paddingLeft: 150,\n    textAlign: \"flex-start\",\n    color: '#F28482',\n    fontFamily: 'Avenir-Heavy',\n    alignItems: 'flex-start',\n    paddingBottom: 25\n  },\n  title2: {\n    fontSize: 70,\n    paddingLeft: 150,\n    textAlign: \"flex-start\",\n    fontFamily: 'Avenir-Heavy',\n    color: ' #92C8BB',\n    paddingBottom: 25\n  },\n  title3: {\n    fontSize: 70,\n    paddingLeft: 150,\n    textAlign: \"flex-start\",\n    fontFamily: 'Avenir-Heavy',\n    color: '#FFCA74'\n  },\n  button1: {\n    width: 84,\n    fontSize: 30,\n    fontFamily: 'Avenir-Medium',\n    fontColor: '#000000',\n    padding: 10\n  },\n  button2: {\n    width: 100,\n    fontSize: 30,\n    fontFamily: 'Avenir-Medium',\n    fontColor: '#000000',\n    backgroundColor: '#FFCA74',\n    borderRadius: 15,\n    padding: 10,\n    textAlign: 'center'\n  },\n  button3: {\n    fontSize: 30,\n    fontFamily: 'Avenir-Medium',\n    fontColor: '#000000',\n    padding: 10,\n    textAlign: 'center',\n    width: 100\n  }\n});","map":{"version":3,"sources":["/Users/saraliu/Downloads/4students/dev/4students/react_frontend/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","Dimensions","get","width","height","SignUp","Login","Home","Stack","App","state","firstName","lastName","email","username","password","date","submit","alert","styles","StyleSheet","create","container","flex","backgroundColor","header","flexDirection","alignItems","justifyContent","paddingRight","start","title1","paddingTop","fontSize","paddingLeft","textAlign","color","fontFamily","paddingBottom","title2","title3","button1","fontColor","padding","button2","borderRadius","button3"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport {Dimensions, Text ,View, StyleSheet , ScrollView, ImageBackground, TextInput, TouchableOpacity, Button } from 'react-native';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst {width, height} = Dimensions.get('window');\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Home from './components/Home';\n\nconst Stack = createStackNavigator();\n\n\nexport default class App extends Component {\n\n  state ={\n    firstName:'',\n    lastName:'',\n    email: '',\n    username: '',\n    password: '',\n    date: '',\n  };\n  submit=() => {\n    const { firstName,lastName, username, email, password } = this.state;\n    if(username == '' || firstName=='' || lastName==''){\n      alert(\"All fields are required\")\n    } else {\n      alert(\"You are registered\")\n    }\n  }\n\n  render(){\n    return (\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={Home} />\n        <Stack.Screen name=\"Join\" component={SignUp} />\n        <Stack.Screen name=\"Login\" component={Login} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFDF5',\n    width,\n    height,\n    \n  },\n  header:{\n    height: height*1/10, \n    flexDirection: 'row', \n    alignItems:'flex-end',\n    justifyContent:'flex-end',\n    paddingRight: 150,\n    start:0,\n  },\n  title1:{\n    paddingTop: 100,\n    fontSize: 70,\n    paddingLeft: 150,\n    textAlign: \"flex-start\",\n    color: '#F28482',\n    fontFamily:'Avenir-Heavy',\n    alignItems: 'flex-start',\n    paddingBottom: 25,\n  },\n  title2:{\n    fontSize: 70,\n    paddingLeft: 150,\n    textAlign: \"flex-start\",\n    fontFamily:'Avenir-Heavy',\n    color:' #92C8BB',\n    paddingBottom: 25,\n  },\n  title3:{\n    fontSize: 70,\n    paddingLeft: 150,\n    textAlign: \"flex-start\",\n    fontFamily:'Avenir-Heavy',\n    color: '#FFCA74'\n  },\n  button1:{\n    width: 84,\n    fontSize:30,\n    fontFamily: 'Avenir-Medium',\n    fontColor:'#000000',\n    padding: 10,\n    \n\n  },\n  button2:{\n    width: 100,\n    fontSize:30,\n    fontFamily: 'Avenir-Medium',\n    fontColor:'#000000',\n    backgroundColor:'#FFCA74',\n    borderRadius:15,\n    padding: 10,\n    textAlign: 'center'\n  },\n  button3:{\n    fontSize:30,\n    fontFamily: 'Avenir-Medium',\n    fontColor:'#000000',\n    padding: 10,\n    textAlign: 'center',\n    width: 100,\n\n  }\n  // font that can be used: Avenir, Avenir Next, Avenir-Heavy, Avenir-Medium, Avenir-Light\n});\n"]},"metadata":{},"sourceType":"module"}